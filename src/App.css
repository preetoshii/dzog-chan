/* Global tap highlight removal */
* {
  -webkit-tap-highlight-color: transparent;
  -webkit-user-select: none;
  user-select: none;
}

button, input, textarea {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  touch-action: manipulation;
}

/* Allow text selection only in input fields */
input, textarea {
  -webkit-user-select: text;
  user-select: text;
}

/* Prevent pull-to-refresh and scrolling on mobile */
html, body {
  overscroll-behavior: none;
  touch-action: none;
}

/* Initial UI fade-in animation */
.ui-hidden {
  opacity: 0;
  visibility: hidden;
}

.ui-fade-in {
  animation: uiFadeIn 2s ease-in-out forwards;
}

@keyframes uiFadeIn {
  from {
    opacity: 0;
    visibility: hidden;
  }
  to {
    opacity: 1;
    visibility: visible;
  }
}

/* Start button */
.start-button {
  position: fixed;
  bottom: 5rem;
  left: 50%;
  transform: translateX(-50%);
  padding: 1rem 2rem;
  border-radius: 2rem;
  border: 2px solid;
  font-size: 1rem;
  cursor: pointer;
  background-color: transparent;
  opacity: 0;
  animation: fadeIn 2s ease-in-out forwards;
  animation-delay: 0.5s;
  -webkit-tap-highlight-color: transparent;
  transition: all 0.3s ease;
  font-weight: 300;
  outline: none;
}

.dark .start-button {
  background-color: rgba(255, 255, 255, 0.05);
  border-color: rgba(255, 255, 255, 0.2);
  color: rgba(255, 255, 255, 0.9);
}

.light .start-button {
  background-color: rgba(0, 0, 0, 0.02);
  border-color: rgba(0, 0, 0, 0.15);
  color: rgba(0, 0, 0, 0.9);
}

.dark .start-button:hover {
  background-color: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.4);
  transform: translateX(-50%) scale(1.05);
}

.light .start-button:hover {
  background-color: rgba(0, 0, 0, 0.05);
  border-color: rgba(0, 0, 0, 0.3);
  transform: translateX(-50%) scale(1.05);
}

.start-button.starting {
  animation: knockAnimation 1.5s ease-out forwards;
  cursor: default;
}

@keyframes knockAnimation {
  0% {
    opacity: 1;
    transform: translateX(-50%) scale(1);
  }
  20% {
    transform: translateX(-50%) scale(1.15);
  }
  40% {
    transform: translateX(-50%) scale(0.95);
  }
  100% {
    opacity: 0;
    transform: translateX(-50%) scale(0.9);
  }
}

/* Triangle exit animation */
.response.triangle-exit {
  animation: simpleFadeOut 1.5s ease-out forwards !important;
  visibility: visible !important;
}

@keyframes simpleFadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.container {
  height: 100vh;
  width: 100vw;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  transition: background-color 0.5s ease, color 0.5s ease;
  position: fixed;
  top: 0;
  left: 0;
  overflow: hidden;
  /* Prevent text size adjustment on mobile */
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-size-adjust: 100%;
}

.container.dark {
  background-color: #000;
  color: #fff;
}

.container.light {
  background-color: #fff;
  color: #000;
}

.dark-mode-toggle {
  position: absolute;
  top: 2rem;
  right: 2rem;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  border: none;
  cursor: pointer;
  background-color: transparent;
  transition: background-color 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
}

.dark .dark-mode-toggle {
  background-color: rgba(255, 255, 255, 0);
  color: rgba(255, 255, 255, 0.5);
  transition: opacity 0.3s ease, background-color 0.3s ease;
}

.dark .dark-mode-toggle.ui-fade-in:not(.show) {
  opacity: 0.5;
}

.dark .dark-mode-toggle.show {
  opacity: 1;
  color: rgba(255, 255, 255, 0.7);
}

.dark .dark-mode-toggle:hover,
.dark .dark-mode-toggle.show:hover {
  background-color: rgba(255, 255, 255, 0.25);
  color: #fff;
  opacity: 1;
}

.light .dark-mode-toggle {
  background-color: rgba(0, 0, 0, 0);
  color: rgba(0, 0, 0, 0.5);
  transition: opacity 0.3s ease, background-color 0.3s ease;
}

.light .dark-mode-toggle.ui-fade-in:not(.show) {
  opacity: 0.5;
}

.light .dark-mode-toggle.show {
  opacity: 1;
  color: rgba(0, 0, 0, 0.6);
}

.light .dark-mode-toggle:hover,
.light .dark-mode-toggle.show:hover {
  background-color: rgba(0, 0, 0, 0.1);
  color: #000;
  opacity: 1;
}

.dark-mode-toggle svg {
  width: 1.5rem;
  height: 1.5rem;
}

.mute-toggle {
  position: absolute;
  top: 2rem;
  right: 5.5rem;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  border: none;
  cursor: pointer;
  background-color: transparent;
  transition: background-color 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
}

.dark .mute-toggle {
  background-color: rgba(255, 255, 255, 0);
  color: rgba(255, 255, 255, 0.5);
  transition: opacity 0.3s ease, background-color 0.3s ease;
}

.dark .mute-toggle.ui-fade-in:not(.show) {
  opacity: 0.5;
}

.dark .mute-toggle.show {
  opacity: 1;
  color: rgba(255, 255, 255, 0.7);
}

.dark .mute-toggle:hover,
.dark .mute-toggle.show:hover {
  background-color: rgba(255, 255, 255, 0.25);
  color: #fff;
  opacity: 1;
}

.light .mute-toggle {
  background-color: rgba(0, 0, 0, 0);
  color: rgba(0, 0, 0, 0.5);
  transition: opacity 0.3s ease, background-color 0.3s ease;
}

.light .mute-toggle.ui-fade-in:not(.show) {
  opacity: 0.5;
}

.light .mute-toggle.show {
  opacity: 1;
  color: rgba(0, 0, 0, 0.6);
}

.light .mute-toggle:hover,
.light .mute-toggle.show:hover {
  background-color: rgba(0, 0, 0, 0.1);
  color: #000;
  opacity: 1;
}

.mute-toggle svg {
  width: 1.5rem;
  height: 1.5rem;
}


.content {
  width: 100%;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 3rem;
  padding-bottom: 7rem; /* Space for floating input */
}

.response-container {
  min-height: 12.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  max-width: 42rem;
  width: 100%;
  position: relative;
}

.response {
  font-size: 1.5rem;
  text-align: center;
  opacity: 0;
  line-height: 1.6;
  visibility: hidden;
  font-weight: 300;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  /* Force consistent rendering */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.response.fade-in {
  animation: fadeIn 2s ease-in-out forwards;
  visibility: visible;
}

.response.fade-in-slow {
  animation: fadeIn 8s ease-in-out forwards;
  visibility: visible;
}

.response.fade-out-quick {
  animation: scaleAndFadeOutQuick 1.5s ease-out forwards;
  visibility: visible;
  opacity: 1;
}

.response.fade-out-slow {
  animation: scaleAndFadeOutSlow 8s ease-out forwards;
  visibility: visible;
  opacity: 1;
}

@media (min-width: 768px) {
  .response {
    font-size: 2rem;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes scaleAndFadeOutQuick {
  0% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  6.67% { /* 0.1s of 1.5s total */
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.05);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.95);
  }
}

@keyframes scaleAndFadeOutSlow {
  0% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.95);
  }
}

/* Wave animation for individual characters */
.wave-char {
  display: inline-block;
  animation: wave 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Keep words together */
.word-group {
  display: inline-block;
  white-space: nowrap;
}

@keyframes wave {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(calc(-1 * var(--wave-height, 4px)));
  }
}


.input-form {
  position: fixed;
  bottom: 5rem;
  left: 50%;
  transform: translateX(-50%);
  width: 70%;
  max-width: 28rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  z-index: 100;
}

.input-form.voice-mode {
  width: auto;
  max-width: none;
}

.input-wrapper {
  position: relative;
  width: 100%;
  height: 3.5rem;
  display: flex;
  align-items: center;
  transition: width 0.4s cubic-bezier(0.4, 0, 0.2, 1),
              transform 0.05s linear,
              opacity 0.2s ease;
}

/* Remove dimming from input wrapper */

.input-wrapper.voice-mode {
  width: 3.5rem;
}

.input-field {
  position: absolute;
  width: 100%;
  height: 100%;
  padding: 1rem 1.5rem;
  padding-right: 3.5rem;
  border-radius: 2rem;
  border: 2px solid;
  font-size: 1rem;
  transition: width 0.4s cubic-bezier(0.4, 0, 0.2, 1),
              padding 0.4s cubic-bezier(0.4, 0, 0.2, 1),
              background-color 0.2s linear,
              border-width 0.05s linear,
              border-color 0.2s linear,
              box-shadow 0.2s linear,
              color 0.2s ease;
  outline: none;
  -webkit-tap-highlight-color: transparent;
  -webkit-appearance: none;
  appearance: none;
  touch-action: manipulation;
}

.input-field.voice-mode {
  width: 3.5rem;
  padding: 0;
  cursor: default;
  color: transparent !important;
}

.input-field.voice-mode::placeholder {
  color: transparent !important;
}

.input-field.processing {
  border-color: rgba(128, 128, 128, 0.3) !important;
  box-shadow: none !important;
  transition: border-color 0.2s linear,
              box-shadow 0.2s linear !important;
}

.input-wrapper.processing {
  transform: scale(1) !important;
  transition: transform 0.05s linear;
}

.dark .input-field {
  background-color: rgba(255, 255, 255, 0.05);
  border-color: rgba(255, 255, 255, 0.2);
  color: rgba(255, 255, 255, 0.9);
}

.dark .input-field::placeholder {
  color: rgba(255, 255, 255, 0.4);
  transition: opacity 0.4s ease-in-out, color 0.4s ease-in-out;
}

.dark .input-field:focus {
  border-color: rgba(255, 255, 255, 0.4);
  box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.1);
}

.light .input-field {
  background-color: rgba(0, 0, 0, 0.02);
  border-color: rgba(0, 0, 0, 0.15);
  color: rgba(0, 0, 0, 0.9);
}

.light .input-field::placeholder {
  color: rgba(0, 0, 0, 0.4);
  transition: opacity 0.4s ease-in-out, color 0.4s ease-in-out;
}

.light .input-field:focus {
  border-color: rgba(0, 0, 0, 0.3);
  box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.05);
}

.input-field.fading {
  color: transparent !important;
  transition: color 0.3s ease-out;
}

/* Placeholder wrapper for both static and dynamic text */
.placeholder-wrapper {
  position: absolute;
  left: 1.5rem;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  font-size: 1rem;
  display: flex;
  align-items: center;
  transition: opacity 0.2s ease;
}

/* Dim placeholder wrapper when input is focused */
.input-wrapper:has(.input-field:focus) .placeholder-wrapper {
  opacity: 0.35;
}

.dark .placeholder-wrapper {
  color: rgba(255, 255, 255, 0.4);
}

.light .placeholder-wrapper {
  color: rgba(0, 0, 0, 0.4);
}

.placeholder-static {
  /* Static "respond " text */
  margin-right: 0.25em;
}

/* Placeholder word overlay - positioned inline */
.placeholder-word-overlay {
  display: inline-block;
  position: relative;
}

/* Color inherited from placeholder-wrapper */

.placeholder-changing {
  transition: opacity 0.5s ease-in-out;
  display: inline-block;
}

.placeholder-changing.fade {
  opacity: 0;
}

/* Hide placeholder when typing */
.dark .input-field:not(:placeholder-shown)::placeholder {
  color: rgba(255, 255, 255, 0);
}

.light .input-field:not(:placeholder-shown)::placeholder {
  color: rgba(0, 0, 0, 0);
}

@keyframes fadeOutText {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.voice-button {
  position: absolute;
  right: 0;
  top: 0;
  width: 3.5rem;
  height: 3.5rem;
  border-radius: 50%;
  border: none;
  background-color: transparent;
  cursor: pointer;
  transition: none;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
}

.dark .voice-button {
  color: rgba(255, 255, 255, 0.7);
}

.dark .voice-button:hover {
  background-color: rgba(255, 255, 255, 0.15);
  color: rgba(255, 255, 255, 0.9);
}

.dark .voice-button.voice-mode {
  color: rgba(59, 130, 255, 1);
}

.light .voice-button {
  color: rgba(0, 0, 0, 0.6);
}

.light .voice-button:hover {
  background-color: rgba(0, 0, 0, 0.1);
  color: rgba(0, 0, 0, 0.8);
}

.light .voice-button.voice-mode {
  color: rgba(59, 130, 255, 1);
}

.voice-button svg {
  width: 1.25rem;
  height: 1.25rem;
  transition: opacity 0.3s ease-out;
}

.voice-button.processing {
  cursor: default;
}

.voice-button.processing svg {
  opacity: 0.2;
}


