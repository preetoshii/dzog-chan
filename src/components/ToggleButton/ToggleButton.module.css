/* Reusable toggle button styles */
.toggleButton {
  position: absolute;
  top: 2rem;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  border: none;
  cursor: pointer;
  background-color: transparent;
  transition: background-color 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
}

.toggleButton svg {
  width: 1.5rem;
  height: 1.5rem;
}

/* Dark mode styles */
:global(.dark) .toggleButton {
  background-color: rgba(255, 255, 255, 0);
  color: rgba(255, 255, 255, 0.5);
  transition: opacity 0.3s ease, background-color 0.3s ease;
}

:global(.dark) .toggleButton.uiFadeIn:not(.show) {
  opacity: 0.5;
}

:global(.dark) .toggleButton.show {
  opacity: 1;
  color: rgba(255, 255, 255, 0.7);
}

:global(.dark) .toggleButton:hover,
:global(.dark) .toggleButton.show:hover {
  background-color: rgba(255, 255, 255, 0.25);
  color: #fff;
  opacity: 1;
}

/* Light mode styles */
:global(.light) .toggleButton {
  background-color: rgba(0, 0, 0, 0);
  color: rgba(0, 0, 0, 0.5);
  transition: opacity 0.3s ease, background-color 0.3s ease;
}

:global(.light) .toggleButton.uiFadeIn:not(.show) {
  opacity: 0.5;
}

:global(.light) .toggleButton.show {
  opacity: 1;
  color: rgba(0, 0, 0, 0.6);
}

:global(.light) .toggleButton:hover,
:global(.light) .toggleButton.show:hover {
  background-color: rgba(0, 0, 0, 0.1);
  color: #000;
  opacity: 1;
}

/* Active state modifier */
.active {
  opacity: 1;
}

/* UI fade in animation */
.uiFadeIn {
  animation: fadeIn 2s ease-in-out forwards;
}

/* Show state */
.show {
  opacity: 1;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    visibility: hidden;
  }
  to {
    opacity: 1;
    visibility: visible;
  }
}